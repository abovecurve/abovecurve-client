# Shout out to sjevs's cloudformation template
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  DomainName:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone e.g. react-spa-starter.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  FullDomainName:
    Type: String
    Description: The full domain name e.g. www.react-spa-starter.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  AcmCertificateArn:
    Type: String
    Description: the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate.
    AllowedPattern: "arn:aws:acm:.*"

Resources:
  ProdBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  StagingBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: !Join ['', ['staging.', !Ref DomainName]]
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

  ProductionBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ProdBucket
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref ProdBucket, /*]]

  StagingBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref StagingBucket
        PolicyDocument:
          Id: MyPolicy
          Version: 2012-10-17
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join ['', ['arn:aws:s3:::', !Ref StagingBucket, /*]]

  ProductionCloudFront:
      Type: AWS::CloudFront::Distribution
      DependsOn:
      - ProdBucket
      Properties:
        DistributionConfig:
          Comment: Cloudfront Distribution pointing to S3 bucket
          Origins:
          - DomainName: !Join ['', [!Ref DomainName, .s3.amazonaws.com]]
            Id: S3Origin
            S3OriginConfig:
               OriginAccessIdentity: ''
          Enabled: true
          HttpVersion: 'http2'
          DefaultRootObject: index.html
          Aliases:
          - !Ref 'FullDomainName'
          - !Ref 'DomainName'
          DefaultCacheBehavior:
            AllowedMethods:
            - GET
            - HEAD
            Compress: true
            TargetOriginId: S3Origin
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          PriceClass: PriceClass_All
          ViewerCertificate:
            AcmCertificateArn: !Ref AcmCertificateArn
            SslSupportMethod: sni-only
          CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html

  StagingCloudFront:
      Type: AWS::CloudFront::Distribution
      DependsOn:
      - StagingBucket
      Properties:
        DistributionConfig:
          Comment: Cloudfront Distribution pointing to S3 bucket
          Origins:
          - DomainName: !Join ['', [staging., !Ref DomainName, .s3.amazonaws.com]]
            Id: S3Origin
            S3OriginConfig:
               OriginAccessIdentity: ''
          Enabled: true
          HttpVersion: 'http2'
          DefaultRootObject: index.html
          Aliases:
          - !Join ['', [staging., !Ref 'DomainName']]
          DefaultCacheBehavior:
            AllowedMethods:
            - GET
            - HEAD
            Compress: true
            TargetOriginId: S3Origin
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          PriceClass: PriceClass_All
          ViewerCertificate:
            AcmCertificateArn: !Ref AcmCertificateArn
            SslSupportMethod: sni-only
          CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html

  ProductionWWWDNS:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: !Join ['', [!Ref 'DomainName', .]]
        RecordSets:
        - Name: !Ref 'FullDomainName'
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt [ProductionCloudFront, DomainName]

  ProductionDNS:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: !Join ['', [!Ref 'DomainName', .]]
        RecordSets:
        - Name: !Ref 'DomainName'
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt [ProductionCloudFront, DomainName]

  StagingDNS:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: !Join ['', [!Ref 'DomainName', .]]
        RecordSets:
        - Name: !Join ['', [staging., !Ref 'DomainName', .]]
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt [StagingCloudFront, DomainName]

Outputs:
  WebsiteURL:
    Value: !GetAtt
      - ProdBucket
      - WebsiteURL
    Description: URL for website hosted on S3
  ProductionCloudFrontEndpoint:
      Value: !GetAtt [ProductionCloudFront, DomainName]
      Description: Endpoint for Cloudfront distribution
  FullDomain:
    Value: !Ref 'FullDomainName'
    Description: Full DomainName